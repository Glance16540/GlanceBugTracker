@using GlanceBugTracker.Models
@{ Layout = null;}
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
<link href="~/Mustang/design/css/main.css" rel="stylesheet" />

<link href="~/Mustang/design/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/Mustang/design/css/login.css" rel="stylesheet" />

<link href="~/Mustang/design/fonts/icomoon/icomoon.css" rel="stylesheet" />
<h2>@ViewBag.Title.</h2>

<body class="login" style="margin-bottom:20px">
    <div id="login-wrapper">
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {

            @Html.AntiForgeryToken()

           


            <div id="login_header">

                <img src="~/Content/Assest/UserUploads/Core App Logo.png" class="logo" alt="Admin Dashboard" />
            </div>

            <h5>Please Sign In To Your Account, Or Create One.</h5>
            <div id="inputs">
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-block">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-1 control-label " })
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

                </div>
                <div class="form-block">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-8 control-label" })
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                </div>
                <input type="submit" value="Log in" class="btn btn-info" />
            </div>








        }


        <div style="margin-left:23px">
            
            <a href="@Url.Action("Register", "Account")" class=" btn btn-primary btn-rounded">Register Here</a>
        
            <a href="@Url.Action("ForgotPassword", "Account")" class="btn btn-info btn-rounded" style="margin-left:18px">Forgot Password? </a>
        </div>

      
           
            <!--Administrator Demo-->
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form - horizontal form - material", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-xs-12">
                        <input name="Email" value="admindemo@gmail.com" hidden />
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                        <div class="form-group">
                            <div class="col-xs-12">
                                <div class="col-xs-12">
                                    <input name="Password" value="Password1!" hidden />
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group text-center m-t-20">
                            <div class="col-xs-12">
                                <button class="btn btn-danger btn-block" type="submit">Admin Demo</button>
                            </div>
                        </div>
            }


        <!--Administrator Demo-->
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form - horizontal form - material", role = "form" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-xs-12">
                    <input name="Email" value="demoprojectmanager@gmail.com" hidden />
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        <div class="col-xs-12">
                            <input name="Password" value="Password1!" hidden />
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                        <div class="form-group text-center m-t-20">
                            <div class="col-xs-12">
                                <button class="btn btn-danger btn-block" type="submit">Project Manager Demo</button>
                            </div>
                        </div>
        }


            <div>

            </div>




            <!--Developer Demo-->
        <!--Administrator Demo-->
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form - horizontal form - material", role = "form" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-xs-12">
                    <input name="Email" value="demodeveloper@gmail.com" hidden />
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        <div class="col-xs-12">
                            <input name="Password" value="Password1!" hidden />
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                        <div class="form-group text-center m-t-20">
                            <div class="col-xs-12">
                                <button class="btn btn-danger btn-block" type="submit">Developer Demo</button>
                            </div>
                        </div>
        }






            <!--Developer Demo-->
        <!--Administrator Demo-->
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form - horizontal form - material", role = "form" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-xs-12">
                    <input name="Email" value="demosubmitter@gmail.com" hidden />
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        <div class="col-xs-12">
                            <input name="Password" value="Password1!" hidden />
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                        <div class="form-group text-center m-t-20">
                            <div class="col-xs-12">
                                <button class="btn btn-danger btn-block" type="submit">Submitter Demo</button>
                            </div>
                        </div>
        }






            &nbsp;
            <hr />

            <div class="form-block">
                <section id="socialLoginForm">
                    @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                </section>
            </div>



        </div>



    


    </body>













@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}